/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import bancodemidias.Filme;
import bancodemidias.Imagem;
import bancodemidias.ListaDeMidias;
import static bancodemidias.ListaDeMidias.getltimaLista;
import bancodemidias.Midia;
import static com.sun.media.jfxmediaimpl.MediaUtils.error;
import java.io.File;
import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ketrin d. Vargas, Marina B. Otokovieski, Rafael Souza
 */
public class CadastroVisualizacaoImagem extends javax.swing.JInternalFrame {

    /**
     * Creates new form CadastroVisualizacaoFrame
     */
    private DefaultTableModel dtmImagens;
    private static List<Midia> listaImagem;
    private static int[] indexId;
    private static int ide;
    private static boolean editavel;
    
    public CadastroVisualizacaoImagem(ListaDeMidias midias) throws IllegalAccessException, IllegalArgumentException, InvocationTargetException {
        indexId = new int[1000];
        listaImagem= new ArrayList();
        initComponents();
        inicia();
        ide = 0;
        editavel = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jBotaoSalvarV = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTImagensCadastrados = new javax.swing.JTable();
        jBotaoExclui = new javax.swing.JButton();
        jButtonEdit = new javax.swing.JButton();
        Pesquisar = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<String>();
        pesquisa = new javax.swing.JTextField();
        Pesquisar1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        FTitulo = new javax.swing.JTextField();
        FDescricao = new javax.swing.JTextField();
        FLocal = new javax.swing.JTextField();
        FData = new javax.swing.JTextField();
        txtFile = new javax.swing.JTextField();
        FFotografo = new javax.swing.JTextField();
        FPessoas = new javax.swing.JTextField();

        setClosable(true);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Imagens Cadastradas");

        jBotaoSalvarV.setText("Salvar");
        jBotaoSalvarV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBotaoSalvarVActionPerformed(evt);
            }
        });

        jTImagensCadastrados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Caminho", "Título", "Descrição", "Fotógrafo", "Pessoas", "Data", "Local"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTImagensCadastrados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTImagensCadastradosMouseClicked(evt);
            }
        });
        jTImagensCadastrados.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTImagensCadastradosKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTImagensCadastrados);

        jBotaoExclui.setText("Excluir");
        jBotaoExclui.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBotaoExcluiActionPerformed(evt);
            }
        });

        jButtonEdit.setText("Editar");
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });

        Pesquisar.setText("Ordenar");
        Pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PesquisarActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione", "Título", "Data" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        pesquisa.setText("pesquisa");
        pesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisaActionPerformed(evt);
            }
        });

        Pesquisar1.setText("Pesquisa");
        Pesquisar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Pesquisar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButtonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(362, 362, 362))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jBotaoExclui, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jBotaoSalvarV, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(334, 334, 334)
                                .addComponent(jLabel2)))
                        .addGap(71, 71, 71)
                        .addComponent(pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                        .addComponent(Pesquisar1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Pesquisar)
                    .addComponent(jBotaoSalvarV)
                    .addComponent(pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Pesquisar1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBotaoExclui)
                    .addComponent(jButtonEdit))
                .addGap(24, 24, 24))
        );

        jTabbedPane1.addTab("Visualização", jPanel1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Cadastro Imagem");

        jButton2.setText("Confirma");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoConfirmaCadastroActionPerformed(evt);
            }
        });

        jLabel3.setText("Título");

        jLabel4.setText("Descrição");

        jLabel5.setText("Fotógrafo");

        jLabel6.setText("Pessoas");

        jLabel7.setText("Local");

        jLabel8.setText("Data");

        jButton3.setText("Arquivo");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoArquivoActionPerformed(evt);
            }
        });

        FTitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FTituloActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(191, 191, 191)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(FTitulo))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(FDescricao))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(189, 189, 189)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(FFotografo))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FData, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(FLocal, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                                .addComponent(FPessoas))
                            .addComponent(txtFile, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(195, 195, 195))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(388, 388, 388))
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(FTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FFotografo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FPessoas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Cadastro", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBotaoSalvarVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBotaoSalvarVActionPerformed

        try{
            ListaDeMidias.salvar();
        }catch(Exception e){
            Logger.getLogger(CadastroVisualizacaoImagem.class.getName()).log(Level.SEVERE, null, e);
        }
        
        try {
            listarImagens();
        } catch (IllegalAccessException ex) {
                    Logger.getLogger(CadastroVisualizacaoImagem.class.getName()).log(Level.SEVERE, null, ex);
        } catch ( InvocationTargetException ex) {
                    Logger.getLogger(CadastroVisualizacaoImagem.class.getName()).log(Level.SEVERE, null, ex);
        }
      
    }//GEN-LAST:event_jBotaoSalvarVActionPerformed

    private void BotaoArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoArquivoActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new  JFileChooser();
        fc.setDialogTitle("Buscar Arquivo");
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        

        FileNameExtensionFilter filter = new FileNameExtensionFilter("Imagem", "jpg", "png");
        
        fc.setFileFilter(filter);
        int retorno = fc.showOpenDialog(this);
        
        if(retorno == JFileChooser.APPROVE_OPTION ){
            
            File file = fc.getSelectedFile();
            txtFile.setText(file.getPath());
           
         } else {
                JOptionPane.showMessageDialog(null, "Erro no arquivo");
        }
    }//GEN-LAST:event_BotaoArquivoActionPerformed

    private void BotaoConfirmaCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoConfirmaCadastroActionPerformed
      /*this.jTabbedPane1.setSelectedIndex(1);
      DefaultTableModel dtmImagens = (DefaultTableModel) jTImagensCadastrados.getModel();
      Object [] dados = {txtFile.getText(), FTitulo.getText(), FDescricao.getText(), FFotografo.getText(),FPessoas.getText(), FData.getText(),FLocal.getText()};
     dtmImagens.addRow(dados);*/
      
      // If construido para tratar exceção
      if (txtFile.getText().equals("") || FTitulo.getText().equals("")|| FDescricao.getText().equals("")|| FFotografo.getText().equals("")|| FPessoas.getText().equals("")|| FLocal.getText().equals("")|| FData.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Informe todos os campos!");
      } else {
          Imagem img = new Imagem(
                    txtFile.getText().trim(),FTitulo.getText().trim(),FDescricao.getText().trim(),FFotografo.getText().trim(),FPessoas.getText().trim(),FLocal.getText().trim(),getDate());
            if (editavel){
                 
                
                if (TelaPrincipalFrame.editar(ide, img) == false) {
                    JOptionPane.showMessageDialog(null, "Não foi possível editar.");
                    editavel = false;
                } else {
                    JOptionPane.showMessageDialog(null, "Edição efetuada!");
                    editavel = false;
                try { 
                    ListaDeMidias.salvar();
                } catch (IOException ex) {
                    Logger.getLogger(CadastroVisualizacaoImagem.class.getName()).log(Level.SEVERE, null, ex);
                }
                limpar();
            } 
                
                
                
            }else{
                criarImagem(img);
            }
         }

        try {
            listarImagens();
        } catch (IllegalAccessException ex) {
                    Logger.getLogger(CadastroVisualizacaoImagem.class.getName()).log(Level.SEVERE, null, ex);
        } catch ( InvocationTargetException ex) {
                    Logger.getLogger(CadastroVisualizacaoImagem.class.getName()).log(Level.SEVERE, null, ex);
        }
      
    }//GEN-LAST:event_BotaoConfirmaCadastroActionPerformed

    private void FTituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FTituloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FTituloActionPerformed

    private void jBotaoExcluiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBotaoExcluiActionPerformed
        int index = jTImagensCadastrados.getSelectedRow();
        int id = getId(index);
        
        // If construido para tratar exceção
        if (ListaDeMidias.remove(id)) {
            JOptionPane.showMessageDialog(null, "Campo não encontro");
        } else {
           try {
               ListaDeMidias.salvar();
               DefaultTableModel dtmImagens = (DefaultTableModel) jTImagensCadastrados.getModel(); 
               dtmImagens.removeRow(jTImagensCadastrados.getSelectedRow()); 
               JOptionPane.showMessageDialog(null, "Campo deletado com sucesso.");
            } catch (IOException ex) {
                Logger.getLogger(CadastroVisualizacaoMusica.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jBotaoExcluiActionPerformed

    private void jTImagensCadastradosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTImagensCadastradosMouseClicked
        if (jTImagensCadastrados.getSelectedRow() != -1){
            txtFile.setText(jTImagensCadastrados.getValueAt(jTImagensCadastrados.getSelectedRow(), 0).toString());
            FTitulo.setText(jTImagensCadastrados.getValueAt(jTImagensCadastrados.getSelectedRow(), 1).toString());
            FDescricao.setText(jTImagensCadastrados.getValueAt(jTImagensCadastrados.getSelectedRow(), 2).toString());
            FFotografo.setText(jTImagensCadastrados.getValueAt(jTImagensCadastrados.getSelectedRow(), 3).toString());
            FPessoas.setText(jTImagensCadastrados.getValueAt(jTImagensCadastrados.getSelectedRow(), 4).toString());   
             FData.setText(jTImagensCadastrados.getValueAt(jTImagensCadastrados.getSelectedRow(), 5).toString()); 
            FLocal.setText(jTImagensCadastrados.getValueAt(jTImagensCadastrados.getSelectedRow(), 6).toString());            
     }else{
         JOptionPane.showMessageDialog(null, "Selecione um produto para editar.");
     } 
    }//GEN-LAST:event_jTImagensCadastradosMouseClicked

    private void jTImagensCadastradosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTImagensCadastradosKeyReleased
        /*if (jTImagensCadastrados.getSelectedRow() != -1){
            txtFile.setText(jTImagensCadastrados.getValueAt(jTImagensCadastrados.getSelectedRow(), 0).toString());
            FTitulo.setText(jTImagensCadastrados.getValueAt(jTImagensCadastrados.getSelectedRow(), 1).toString());
            FDescricao.setText(jTImagensCadastrados.getValueAt(jTImagensCadastrados.getSelectedRow(), 2).toString());
            FFotografo.setText(jTImagensCadastrados.getValueAt(jTImagensCadastrados.getSelectedRow(), 3).toString());
            FPessoas.setText(jTImagensCadastrados.getValueAt(jTImagensCadastrados.getSelectedRow(), 4).toString()); 
            FData.setText(jTImagensCadastrados.getValueAt(jTImagensCadastrados.getSelectedRow(), 5).toString()); 
            FLocal.setText(jTImagensCadastrados.getValueAt(jTImagensCadastrados.getSelectedRow(), 6).toString());   
                    
     }else{
         JOptionPane.showMessageDialog(null, "Selecione um produto para editar.");
        }*/
    }//GEN-LAST:event_jTImagensCadastradosKeyReleased

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
        if (jTImagensCadastrados.getSelectedRow() != -1){
            ide = getId(jTImagensCadastrados.getSelectedRow());
            editavel = true;
            txtFile.setText(jTImagensCadastrados.getValueAt(jTImagensCadastrados.getSelectedRow(), 0).toString());
            FTitulo.setText(jTImagensCadastrados.getValueAt(jTImagensCadastrados.getSelectedRow(), 1).toString());
            FDescricao.setText(jTImagensCadastrados.getValueAt(jTImagensCadastrados.getSelectedRow(), 2).toString());
            FFotografo.setText(jTImagensCadastrados.getValueAt(jTImagensCadastrados.getSelectedRow(), 3).toString());
            FPessoas.setText(jTImagensCadastrados.getValueAt(jTImagensCadastrados.getSelectedRow(), 4).toString()); 
            FData.setText(jTImagensCadastrados.getValueAt(jTImagensCadastrados.getSelectedRow(), 5).toString()); 
            FLocal.setText(jTImagensCadastrados.getValueAt(jTImagensCadastrados.getSelectedRow(), 6).toString());  
            
        }else{
            JOptionPane.showMessageDialog(null, "Selecione um produto para editar.");
        }
    }//GEN-LAST:event_jButtonEditActionPerformed

    private void PesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PesquisarActionPerformed
        // TODO add your handling code here:
        String indice = jComboBox1.getSelectedItem().toString();
        switch (indice) {
            case "Título":
                ListaDeMidias.ordenaAlfabeticamente();
           break;
            case "Data":
                ListaDeMidias.ordenaData();
            break;  
        }  
        try {
            listarImagens();
        } catch (IllegalAccessException ex) {
                    Logger.getLogger(CadastroVisualizacaoImagem.class.getName()).log(Level.SEVERE, null, ex);
        } catch ( InvocationTargetException ex) {
                    Logger.getLogger(CadastroVisualizacaoImagem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_PesquisarActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void Pesquisar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Pesquisar1ActionPerformed

    }//GEN-LAST:event_Pesquisar1ActionPerformed

    private void pesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pesquisaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField FData;
    private javax.swing.JTextField FDescricao;
    private javax.swing.JTextField FFotografo;
    private javax.swing.JTextField FLocal;
    private javax.swing.JTextField FPessoas;
    private javax.swing.JTextField FTitulo;
    private javax.swing.JButton Pesquisar;
    private javax.swing.JButton Pesquisar1;
    private javax.swing.JButton jBotaoExclui;
    private javax.swing.JButton jBotaoSalvarV;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTImagensCadastrados;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField pesquisa;
    private javax.swing.JTextField txtFile;
    // End of variables declaration//GEN-END:variables
/**
  * Retorna a data já convertida para Date 
  * @return O conteúdo da JDateTextField em formato java.util.Date
  */
public Date getDate() {
         String dataStr = FData.getText().substring(0, 8);
         if (FData.equals("  /  /  ")) { return null;
         }else{ 
         DateFormat df = new SimpleDateFormat("dd/mm/yyyy");
         df.setLenient(false);
         try {
            return df.parse(dataStr);
         }
         catch(ParseException e) {
              e.printStackTrace();
            return null;
         }    
         }

 }

public static int getId(int index){
        return indexId[index];
}

public void listarImagens() throws IllegalAccessException, IllegalArgumentException, InvocationTargetException{
    Imagem objetoImagem =  new Imagem(null, null, null, null, null, null, null);
    dtmImagens = (DefaultTableModel) jTImagensCadastrados.getModel();
    listaImagem = ListaDeMidias.getLista(objetoImagem, null, null);

    for (int i = 0; i<listaImagem.size(); i++){
        Midia midia = listaImagem.get(i);
        indexId[i++] = midia.getId(); 
    }

    int indexador = 0;
    for (Midia m : listaImagem){
        jTImagensCadastrados.setValueAt(m.getCaminhoDoArquivo(), indexador, 0);
        jTImagensCadastrados.setValueAt(m.getTitulo(), indexador, 1);
        jTImagensCadastrados.setValueAt(m.getDescricao(), indexador, 2);
        jTImagensCadastrados.setValueAt(m.getFotografo(), indexador, 3);
        jTImagensCadastrados.setValueAt(m.getPessoas(), indexador, 4);
        jTImagensCadastrados.setValueAt(m.getData(), indexador, 5);
        jTImagensCadastrados.setValueAt(m.getLocal(), indexador, 6);
        indexador++;
    }
    
    
}

 private void limpar() {
        txtFile.setText("");
        FTitulo.setText("");
        FDescricao.setText("");
        FFotografo.setText("");
        FPessoas.setText("");
        FLocal.setText("");
        FData.setText("");
      
    }
 
 private void inicia() throws IllegalAccessException, IllegalArgumentException, InvocationTargetException{
     Imagem objetoImagem =  new Imagem(null, null, null, null, null, null, null);
        listaImagem = ListaDeMidias.getLista(objetoImagem, null, null);
        dtmImagens = (DefaultTableModel) jTImagensCadastrados.getModel();
        for (int i = 0; i<listaImagem.size(); i++){
            Object obj = null;
        dtmImagens.addRow((Object[]) obj);
        }
        
        int indexador = 0;
    for (Midia m : listaImagem){
        jTImagensCadastrados.setValueAt(m.getCaminhoDoArquivo(), indexador, 0);
        jTImagensCadastrados.setValueAt(m.getTitulo(), indexador, 1);
        jTImagensCadastrados.setValueAt(m.getDescricao(), indexador, 2);
        jTImagensCadastrados.setValueAt(m.getFotografo(), indexador, 3);
        jTImagensCadastrados.setValueAt(m.getPessoas(), indexador, 4);
        jTImagensCadastrados.setValueAt(m.getData(), indexador, 5);
        jTImagensCadastrados.setValueAt(m.getLocal(), indexador, 6);
        
        indexador++;
    }
 }
 
 private void criarImagem(Imagem img){
      
            
            if (TelaPrincipalFrame.adicionar(img) == false) {
                JOptionPane.showMessageDialog(null, "Não foi possível salvar.");
            } else {
                JOptionPane.showMessageDialog(null, "Cadastro Efetuado!");
                Object obj = null;
                dtmImagens.addRow((Object[]) obj);
                try { 
                    ListaDeMidias.salvar();
                } catch (IOException ex) {
                    Logger.getLogger(CadastroVisualizacaoImagem.class.getName()).log(Level.SEVERE, null, ex);
                }
                limpar();
            }    
            
 }

}




